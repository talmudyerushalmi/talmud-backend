name: Deploy to staging2

on:

  workflow_dispatch:


jobs:
  run_example_job:
    name: deploy test
    environment:
      name: staging
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v4
    - name: Build  
      id: build      
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_DEFAULT_REGION: 'eu-west-1'
        IMAGE: ${{secrets.IMAGE_REGISTRY}}

      run: |
        make upload
        VERSION=$(<"version.txt")
        IMAGE="$IMAGE:$VERSION"
        echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
        template_file="docker-compose-backend.template.yml"
        template_content=$(<"docker-compose-backend.template.yml")
        echo "$template_content" | sed "s|\${IMAGE}|$IMAGE|g" > docker-compose-backend.yml


    - name: copy file via ssh
      uses: appleboy/scp-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose-backend.yml"
        target: .
    - name: print out example job
      uses: appleboy/ssh-action@v1.0.3
      env:
        IMAGE: ${{ steps.build.outputs.IMAGE }}
        IMAGE_REGISTRY: ${{secrets.IMAGE_REGISTRY}}
        TEST: "yaron-test"
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        envs: IMAGE,IMAGE_REGISTRY
        command_timeout: 30m
        script: | 
          aws ecr get-login-password  | docker login --username AWS --password-stdin $IMAGE_REGISTRY
          docker-compose  -f docker-compose-backend.yml down
          docker-compose -f docker-compose-backend.yml up -d
